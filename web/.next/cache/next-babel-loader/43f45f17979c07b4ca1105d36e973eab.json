{"ast":null,"code":"var _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/sup-safari/web/pages/blog.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport groq from 'groq';\nimport CenterWrapper from '../components/CenterWrapper';\nimport Fullscreen from '../components/Fullscreen';\nimport styled from \"@emotion/styled\";\nimport Link from 'next/link';\nimport client from '../client';\nimport ArticleCard from '../components/ArticleCard';\nimport imageUrlBuilder from '@sanity/image-url';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst Blogfront = styled.div`\n\n    h2{\n        padding-bottom: 1rem;\n        border-bottom: 2px solid lightgray;\n        text-align: center;\n    }\n    p{\n      text-align: center;\n      font-size: 1.8rem;\n      line-height: 1.6;\n      max-width: 700px;\n      margin: 3rem 2rem 2rem 2rem;\n    }\n    a:hover{\n        color: turquoise;\n    }\n`;\n\nfunction Blog(props) {\n  const {\n    posts = []\n  } = props;\n  return __jsx(React.Fragment, null, __jsx(Fullscreen, {\n    image: \"/img/supsafari-hvaler.jpg\",\n    text: \"#fff\",\n    height: \"40vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 1\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, \"Surfe-tips\")), __jsx(Blogfront, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(CenterWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, posts.map(({\n    _id,\n    title = '',\n    slug = '',\n    _updatedAt = ''\n  }) => slug && __jsx(React.Fragment, null, __jsx(ArticleCard, {\n    key: \"\",\n    bildeURL: urlFor(mainImage).width().url(),\n    periode: \"\",\n    scene: \"\",\n    navn: title,\n    slug: slug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), __jsx(\"li\", {\n    key: _id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    href: \"/post/[slug]\",\n    as: `/post/${slug.current}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }\n  }, title))), ' ')))))));\n}\n\nconst query = groq`*[_type == \"post\" && publishedAt < now()]|order(publishedAt desc) {\n    mainImage,\n    title\n}\n`;\n\nBlogg.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default Blog;","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/sup-safari/web/pages/blog.js"],"names":["groq","CenterWrapper","Fullscreen","styled","Link","client","ArticleCard","imageUrlBuilder","urlFor","source","image","Blogfront","div","Blog","props","posts","map","_id","title","slug","_updatedAt","mainImage","width","url","current","query","Blogg","getInitialProps","context","fetch"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAIA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACrB,SAAOF,eAAe,CAACF,MAAD,CAAf,CAAwBK,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAIH,MAAME,SAAS,GAAGR,MAAM,CAACS,GAAI;;;;;;;;;;;;;;;;;CAA7B;;AAqBA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM;AAAEC,IAAAA,KAAK,GAAG;AAAV,MAAiBD,KAAvB;AACA,SACF,4BACA,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC,2BAAlB;AAA+C,IAAA,IAAI,EAAC,MAApD;AAA2D,IAAA,MAAM,EAAC,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADA,EAII,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,GAAN,CACC,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAK,GAAG,EAAf;AAAmBC,IAAAA,IAAI,GAAG,EAA1B;AAA8BC,IAAAA,UAAU,GAAG;AAA3C,GAAD,KACED,IAAI,IACA,4BACA,MAAC,WAAD;AACA,IAAA,GAAG,EAAC,EADJ;AAEA,IAAA,QAAQ,EAAEX,MAAM,CAACa,SAAD,CAAN,CAAkBC,KAAlB,GAA0BC,GAA1B,EAFV;AAGA,IAAA,OAAO,EAAC,EAHR;AAIA,IAAA,KAAK,EAAC,EAJN;AAKA,IAAA,IAAI,EAAEL,KALN;AAMA,IAAA,IAAI,EAAEC,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAUF;AAAI,IAAA,GAAG,EAAEF,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAA0B,IAAA,EAAE,EAAG,SAAQE,IAAI,CAACK,OAAQ,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,KAAJ,CAAJ,CADF,CADF,EAGU,GAHV,CAVE,CAHP,CADH,CAFA,CADF,CAJJ,CADE;AAqCD;;AACD,MAAMO,KAAK,GAAGzB,IAAK;;;;CAAnB;;AAOA0B,KAAK,CAACC,eAAN,GAAwB,gBAAgBC,OAAhB,EAAyB;AAC7C;AACA,QAAM;AAAET,IAAAA,IAAI,GAAG;AAAT,MAAgBS,OAAO,CAACH,KAA9B;AACA,SAAO,MAAMpB,MAAM,CAACwB,KAAP,CAAaJ,KAAb,EAAoB;AAAEN,IAAAA;AAAF,GAApB,CAAb;AACD,CAJH;;AAQA,eAAeN,IAAf","sourcesContent":["import groq from 'groq'\nimport CenterWrapper from '../components/CenterWrapper'\nimport Fullscreen from '../components/Fullscreen'\nimport styled from \"@emotion/styled\";\nimport Link from 'next/link'\nimport client from '../client'\nimport ArticleCard from '../components/ArticleCard'\nimport imageUrlBuilder from '@sanity/image-url'\n\n\n\nfunction urlFor (source) {\n    return imageUrlBuilder(client).image(source)\n  }\n\n\n\nconst Blogfront = styled.div`\n\n    h2{\n        padding-bottom: 1rem;\n        border-bottom: 2px solid lightgray;\n        text-align: center;\n    }\n    p{\n      text-align: center;\n      font-size: 1.8rem;\n      line-height: 1.6;\n      max-width: 700px;\n      margin: 3rem 2rem 2rem 2rem;\n    }\n    a:hover{\n        color: turquoise;\n    }\n`;\n\n\n\nfunction Blog(props) {\n  const { posts = [] } = props\n  return(\n<>\n<Fullscreen image=\"/img/supsafari-hvaler.jpg\"  text=\"#fff\" height=\"40vh\" >\n    <h1>Surfe-tips</h1>\n    </Fullscreen> \n    <Blogfront>\n      <CenterWrapper>\n\n      <div>\n        {posts.map(\n          ({ _id, title = '', slug = '', _updatedAt = '' }) =>\n            slug && (\n                <>\n                <ArticleCard \n                key=\"\"\n                bildeURL={urlFor(mainImage).width().url()}\n                periode=\"\"\n                scene=\"\"\n                navn={title}\n                slug={slug}\n                />\n\n              <li key={_id}>\n                <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>\n                  <h2><a>{title}</a></h2>\n                </Link>{' '}\n  \n              </li>\n              </>\n            )\n        )}\n      </div>\n    \n      </CenterWrapper>\n      </Blogfront>\n</>\n  )\n}\nconst query = groq`*[_type == \"post\" && publishedAt < now()]|order(publishedAt desc) {\n    mainImage,\n    title\n}\n`\n\n\nBlogg.getInitialProps = async function (context) {\n    // It's important to default the slug so that it doesn't return \"undefined\"\n    const { slug = \"\" } = context.query\n    return await client.fetch(query, { slug })\n  }\n\n\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}