{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport groq from 'groq';\nimport imageUrlBuilder from '@sanity/image-url';\nimport BlockContent from '@sanity/block-content-to-react';\nimport client from '../../client';\nimport CenterWrapper from '../../components/CenterWrapper';\nimport Fullscreen from '../../components/Fullscreen';\nimport styled from \"@emotion/styled\";\nconst Article = styled.article`\n  padding: 0rem 2rem;\n\n  img{\n    width: 100%;\n  }\n`;\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst singlePost = props => {\n  const {\n    title = 'Mangler tittel',\n    name = 'Ukjent',\n    mainImage,\n    body = []\n  } = props;\n  return __jsx(React.Fragment, null, __jsx(Fullscreen, {\n    image: urlFor(mainImage).width().url(),\n    text: \"#fff\",\n    height: \"60vh\"\n  }, __jsx(\"h1\", null, title), __jsx(\"span\", {\n    className: \"byline\"\n  }, \"Av: \", name)), __jsx(CenterWrapper, null, __jsx(Article, null, __jsx(BlockContent, _extends({\n    blocks: body,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: 'max'\n    }\n  }, client.config())))));\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  _id,\n  mainImage,\n  \"name\": author->name,\n  \"categories\": categories[]->title,\n  \"authorImage\": author->image,\n  body\n}`;\n\nsinglePost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"test\"\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default singlePost;","map":null,"metadata":{},"sourceType":"module"}