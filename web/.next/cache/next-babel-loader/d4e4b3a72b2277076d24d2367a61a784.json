{"ast":null,"code":"var _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/sup-safari/web/pages/post/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport groq from 'groq';\nimport imageUrlBuilder from '@sanity/image-url';\nimport BlockContent from '@sanity/block-content-to-react';\nimport client from '../../client';\nimport CenterWrapper from '../../components/CenterWrapper';\nimport Fullscreen from '../../components/Fullscreen';\nimport styled from \"@emotion/styled\";\nconst Article = styled.article`\n  padding: 0rem 2rem;\n\n  img{\n    width: 100%;\n  }\n`;\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst singlePost = props => {\n  const {\n    title = 'Mangler tittel',\n    name = 'Ukjent',\n    mainImage,\n    body = []\n  } = props;\n  return __jsx(React.Fragment, null, __jsx(Fullscreen, {\n    image: urlFor(mainImage).width().url(),\n    text: \"#fff\",\n    height: \"60vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, title), __jsx(\"span\", {\n    className: \"byline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \"Av: \", name)), __jsx(CenterWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Article, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(BlockContent, _extends({\n    blocks: body,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: 'max'\n    }\n  }, client.config(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  })))));\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  _id,\n  mainImage,\n  \"name\": author->name,\n  \"categories\": categories[]->title,\n  \"authorImage\": author->image,\n  body\n}`;\n\nsinglePost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"safari\"\n  } = context.slugg;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default singlePost;","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/sup-safari/web/pages/post/[slug].js"],"names":["groq","imageUrlBuilder","BlockContent","client","CenterWrapper","Fullscreen","styled","Article","article","urlFor","source","image","singlePost","props","title","name","mainImage","body","width","url","w","h","fit","config","query","getInitialProps","context","slug","slugg","fetch"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAQ;;;;;;CAA/B;;AAQA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAOT,eAAe,CAACE,MAAD,CAAf,CAAwBQ,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,MAAME,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AACJC,IAAAA,KAAK,GAAG,gBADJ;AAEJC,IAAAA,IAAI,GAAG,QAFH;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,IAAI,GAAG;AAJH,MAKFJ,KALJ;AAMA,SACE,4BACA,MAAC,UAAD;AAAY,IAAA,KAAK,EAAEJ,MAAM,CAACO,SAAD,CAAN,CAAkBE,KAAlB,GAA0BC,GAA1B,EAAnB;AAAoD,IAAA,IAAI,EAAC,MAAzD;AAAgE,IAAA,MAAM,EAAC,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,KAAL,CADA,EAEA;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8BC,IAA9B,CAFA,CADA,EAMA,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,YAAD;AACE,IAAA,MAAM,EAAEE,IADV;AAEE,IAAA,YAAY,EAAE;AAAEG,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE,GAAb;AAAkBC,MAAAA,GAAG,EAAE;AAAvB;AAFhB,KAGMnB,MAAM,CAACoB,MAAP,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADA,CANA,CADF;AAmBD,CA1BD;;AA4BA,MAAMC,KAAK,GAAGxB,IAAK;;;;;;;;EAAnB;;AAUAY,UAAU,CAACa,eAAX,GAA6B,gBAAgBC,OAAhB,EAAyB;AACpD;AACA,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAsBD,OAAO,CAACE,KAApC;AACA,SAAO,MAAMzB,MAAM,CAAC0B,KAAP,CAAaL,KAAb,EAAoB;AAAEG,IAAAA;AAAF,GAApB,CAAb;AACD,CAJD;;AAMA,eAAef,UAAf","sourcesContent":["import groq from 'groq'\nimport imageUrlBuilder from '@sanity/image-url'\nimport BlockContent from '@sanity/block-content-to-react'\nimport client from '../../client'\nimport CenterWrapper from '../../components/CenterWrapper'\nimport Fullscreen from '../../components/Fullscreen'\nimport styled from \"@emotion/styled\";\n\nconst Article = styled.article`\n  padding: 0rem 2rem;\n\n  img{\n    width: 100%;\n  }\n`;\n\nfunction urlFor (source) {\n  return imageUrlBuilder(client).image(source)\n}\n\nconst singlePost = (props) => {\n  const {\n    title = 'Mangler tittel',\n    name = 'Ukjent',\n    mainImage,\n    body = []\n  } = props\n  return (\n    <>\n    <Fullscreen image={urlFor(mainImage).width().url()} text=\"#fff\" height=\"60vh\" >\n    <h1>{title}</h1>\n    <span className=\"byline\">Av: {name}</span>\n\n    </Fullscreen> \n    <CenterWrapper>\n    <Article>\n\n      <BlockContent\n        blocks={body}\n        imageOptions={{ w: 320, h: 240, fit: 'max' }}\n        {...client.config()}\n      />\n   </Article>\n    </CenterWrapper>\n    </>\n  )\n}\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  _id,\n  mainImage,\n  \"name\": author->name,\n  \"categories\": categories[]->title,\n  \"authorImage\": author->image,\n  body\n}`\n\nsinglePost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const { slug = \"safari\" } = context.slugg\n  return await client.fetch(query, { slug })\n}\n\nexport default singlePost"]},"metadata":{},"sourceType":"module"}