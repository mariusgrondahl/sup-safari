{"ast":null,"code":"var _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/sup-safari/web/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// index.js\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\n\nconst Index = props => {\n  const {\n    posts = []\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"Welcome to a blog!\"), posts.map(({\n    _id,\n    title = '',\n    slug = '',\n    _updatedAt = ''\n  }) => slug && __jsx(\"li\", {\n    key: _id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    href: \"/post/[slug]\",\n    as: `/post/${slug.current}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 19\n    }\n  }, title)), ' ', \"(\", new Date(_updatedAt).toDateString(), \")\")));\n};\n\nIndex.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n    `)\n});\n\nexport default Index;","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/sup-safari/web/pages/index.js"],"names":["Link","groq","client","Index","props","posts","map","_id","title","slug","_updatedAt","current","Date","toDateString","getInitialProps","fetch"],"mappings":";;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAM;AAAEC,IAAAA,KAAK,GAAG;AAAV,MAAiBD,KAAvB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGC,KAAK,CAACC,GAAN,CACC,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAK,GAAG,EAAf;AAAmBC,IAAAA,IAAI,GAAG,EAA1B;AAA8BC,IAAAA,UAAU,GAAG;AAA3C,GAAD,KACED,IAAI,IACF;AAAI,IAAA,GAAG,EAAEF,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAA0B,IAAA,EAAE,EAAG,SAAQE,IAAI,CAACE,OAAQ,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAJ,CADF,CADF,EAGU,GAHV,OAII,IAAII,IAAJ,CAASF,UAAT,EAAqBG,YAArB,EAJJ,MAHL,CAFH,CADF;AAgBH,CAlBD;;AAoBAV,KAAK,CAACW,eAAN,GAAwB,aAAa;AACjCT,EAAAA,KAAK,EAAE,MAAMH,MAAM,CAACa,KAAP,CAAad,IAAK;;KAAlB;AADoB,CAAb,CAAxB;;AAMA,eAAeE,KAAf","sourcesContent":["// index.js\nimport Link from 'next/link'\nimport groq from 'groq'\nimport client from '../client'\n\nconst Index = (props) => {\n    const { posts = [] } = props\n    return (\n      <div>\n        <h1>Welcome to a blog!</h1>\n        {posts.map(\n          ({ _id, title = '', slug = '', _updatedAt = '' }) =>\n            slug && (\n              <li key={_id}>\n                <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>\n                  <a>{title}</a>\n                </Link>{' '}\n                ({new Date(_updatedAt).toDateString()})\n              </li>\n            )\n        )}\n      </div>\n    )\n}\n\nIndex.getInitialProps = async () => ({\n    posts: await client.fetch(groq`\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n    `)\n})\n\nexport default Index"]},"metadata":{},"sourceType":"module"}