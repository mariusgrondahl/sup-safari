{"version":3,"sources":["../../../../src/morphology/spanish/stem.js"],"names":["stem","isVowel","c","regex","test","nextVowelPosition","word","start","length","position","nextConsonantPosition","endsIn","suffix","slice","endsInArr","suffixes","matches","i","push","longest","sort","a","b","removeAccent","accentedVowels","vowels","replace","checkWordInFullFormExceptions","exceptions","paradigm","includes","tryStemAsMente","r1Text","menteStemming","notMenteAdverbs","menteToStem","tryStemAsSuperlative","superlativesStemming","superlativeSuffix","superlativeSuffixes","notSuperlatives","superlativeToStem","tryStemAsDiminutive","diminutivesStemming","diminutiveSuffix","notDiminutives","wordWithoutEnding","endsWith","irregularDiminutives","diminutiveToStem","canonicalizeStem","stemmedWord","stemsThatBelongToOneWord","nouns","adjectives","verbs","stemVerbSuffixes","wordAfter1","rvText","rv","suf","suf11","suf12","morphologyData","toLowerCase","ifException","exceptionStemsWithFullForms","nonPluralsOnS","wordsThatLookLikeButAreNot","r1","r2","r2Text","originalWord","pronounSuffix","pronounSuffixPre1","pronounSuffixPre2","notVerbsEndingInPersonalPronouns","preSuffix","wordAfter0","suf1","suf2","suf3","suf4","suf5","suf9","suf10","ifMente","ifSuperlative","ifDiminutive","notVerbForms","wordWithoutS","suf13","canonicalStem"],"mappings":"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","file":"stem.js","sourcesContent":["/* eslint-disable max-statements, require-jsdoc, complexity */\n// The function will be further adjected anyways, so it makes no sense to randomly split it in smaller functions now.\n// The orginal stemmer is available at https://github.com/dmarman/lorca/blob/master/src/stemmer.js.\nimport { buildOneFormFromRegex } from \"../morphoHelpers/buildFormRule\";\nimport createRulesFromMorphologyData from \"../morphoHelpers/createRulesFromMorphologyData\";\n\n/**\n * Copyright (C) 2018 Domingo Martín Mancera\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n */\n\n\nconst isVowel = function( c ) {\n\tconst regex = /[aeiouáéíóú]/gi;\n\n\treturn regex.test( c );\n};\n\nconst nextVowelPosition = function( word, start = 0 ) {\n\tconst length = word.length;\n\n\tfor ( let position = start; position < length; position++ ) {\n\t\tif ( isVowel( word[ position ] ) ) {\n\t\t\treturn position;\n\t\t}\n\t}\n\n\treturn length;\n};\n\nconst nextConsonantPosition = function( word, start = 0 ) {\n\tconst length = word.length;\n\n\tfor ( let position = start; position < length; position++ ) {\n\t\tif ( ! isVowel( word[ position ] ) ) {\n\t\t\treturn position;\n\t\t}\n\t}\n\n\treturn length;\n};\n\nconst endsIn = function( word, suffix ) {\n\tif ( word.length < suffix.length ) {\n\t\treturn false;\n\t}\n\n\treturn ( word.slice( -suffix.length ) === suffix );\n};\n\nconst endsInArr = function( word, suffixes ) {\n\tconst matches = [];\n\tfor ( const i in suffixes ) {\n\t\tif ( endsIn( word, suffixes[ i ] ) ) {\n\t\t\tmatches.push( suffixes[ i ] );\n\t\t}\n\t}\n\n\tconst longest = matches.sort( function( a, b ) {\n\t\treturn b.length - a.length;\n\t} )[ 0 ];\n\n\tif ( longest ) {\n\t\treturn longest;\n\t}\n\treturn \"\";\n};\n\nconst removeAccent = function( word ) {\n\tconst accentedVowels = [ \"á\", \"é\", \"í\", \"ó\", \"ú\" ];\n\tconst vowels = [ \"a\", \"e\", \"i\", \"o\", \"u\" ];\n\n\tfor ( let i = 0; i < accentedVowels.length; i++ ) {\n\t\tword = word.replace( accentedVowels[ i ], vowels[ i ] );\n\t}\n\n\treturn word;\n};\n\n/**\n * Checks whether a word is in the full-form exception list and if so returns the canonical stem.\n *\n * @param {string} word\t      The word to be checked.\n * @param {Object} exceptions The list of full-form exceptions to be checked in.\n *\n * @returns {null|string} The canonical stem or null if nothing was found.\n */\nconst checkWordInFullFormExceptions = function( word, exceptions ) {\n\tfor ( const paradigm of exceptions ) {\n\t\tif ( paradigm[ 1 ].includes( word ) ) {\n\t\t\treturn paradigm[ 0 ];\n\t\t}\n\t}\n\treturn null;\n};\n\n/**\n * The function considers if the input word can be an adverb in -mente and if so stems it.\n * @param   {string}   word                                      The word to stem.\n * @param   {string}   r1Text                                    The R1 region of the word to stem.\n * @param   {Object}   menteStemming                      An object containing information about how to stem mente-adverbs.\n * @param   {string[]} menteStemming.notMente      An array of words that look like mente-adverbs but are not.\n * @param   {Array}    menteStemming.menteToStem    An array of pairs of regexes to match.\n * @returns {string}   A stemmed adverb or the input word, if it is not an adverb.\n */\nconst tryStemAsMente = function( word, r1Text, menteStemming ) {\n\tconst suffix = endsIn( r1Text, \"mente\" );\n\n\t// Immediately return the input word if no mente suffix is found or the word is in the stopList.\n\tif ( suffix === \"\" || menteStemming.notMenteAdverbs.includes( word ) ) {\n\t\treturn word;\n\t}\n\n\treturn buildOneFormFromRegex( word, createRulesFromMorphologyData( menteStemming.menteToStem ) ) || word;\n};\n\n/**\n * The function considers if the input word can be a superlative and if so stems it.\n * @param   {string}   word                                      The word to stem.\n * @param   {string}   r1Text                                    The R1 region of the word to stem.\n * @param   {Object}   superlativesStemming                      An object containing information about how to stem superlatives.\n * @param   {string[]} superlativesStemming.superlativeSuffixes  An array of suffixes possible in superlatives.\n * @param   {string[]} superlativesStemming.notSuperlatives      An array of words that look like superlatives but are not.\n * @param   {Array}    superlativesStemming.superlativeToStem    An array of pairs of regexes to match.\n * @returns {string}   A stemmed superlative or the input word, if it is not a superlative.\n */\nconst tryStemAsSuperlative = function( word, r1Text, superlativesStemming ) {\n\tconst superlativeSuffix = endsInArr( r1Text, superlativesStemming.superlativeSuffixes );\n\n\t// Immediately return the input word if no superlative suffix is found or the word is in the stopList.\n\tif ( superlativeSuffix === \"\" || superlativesStemming.notSuperlatives.includes( word ) ) {\n\t\treturn word;\n\t}\n\n\treturn buildOneFormFromRegex( word, createRulesFromMorphologyData( superlativesStemming.superlativeToStem ) ) || word;\n};\n\n/**\n * The function considers if the input word can be a diminutive and if so stems it.\n * @param   {string}   word                                         The word to stem.\n * @param   {Object}   diminutivesStemming                          An object containing information about how to stem diminutives.\n * @param   {string[]} diminutivesStemming.notDiminutives           An array of words that look like diminutives but are not.\n * @param   {Array}    diminutivesStemming.diminutiveToStem         An array of pairs of regexes to match.\n * @param   {Array}    diminutivesStemming.irregularDiminutives     An array containing data for irregular diminutives.\n *\n * @returns {string}   A stemmed diminutive or the input word, if it is not a diminutive.\n */\nconst tryStemAsDiminutive = function( word, diminutivesStemming ) {\n\tconst diminutiveSuffix = endsInArr( word, [ \"ito\", \"ita\", \"itos\", \"itas\", \"íto\", \"íta\", \"ítos\", \"ítas\" ] );\n\n\t// Immediately return the input word if no diminutive suffix is found or the word is in the stopList.\n\tif ( diminutiveSuffix === \"\" ||  diminutivesStemming.notDiminutives.includes( word ) ) {\n\t\treturn word;\n\t}\n\n\t// Remove o/a/os/as and check irregular diminutives ending in -it-/-ít-\n\tconst wordWithoutEnding = word.endsWith( \"s\" )\n\t\t? word.slice( 0, word.length - 2 )\n\t\t: word.slice( 0, word.length - 1 );\n\n\tfor ( const paradigm of diminutivesStemming.irregularDiminutives ) {\n\t\tif ( paradigm[ 1 ].includes( wordWithoutEnding ) ) {\n\t\t\treturn paradigm[ 0 ];\n\t\t}\n\t}\n\n\treturn buildOneFormFromRegex( word, createRulesFromMorphologyData(  diminutivesStemming.diminutiveToStem ) ) || word;\n};\n\n/**\n * Checks whether a stem is in an exception list of verbs, nouns or adjectives with multiple stems and if so returns\n * the canonical stem.\n *\n * @param {string} stemmedWord\t            The stemmed word to be checked.\n * @param {Object} stemsThatBelongToOneWord The POS-specific data that shows how non-canonical stems should be canonicalized.\n *\n * @returns {null|string} The canonical stem or null if nothing was found.\n */\nconst canonicalizeStem = function( stemmedWord, stemsThatBelongToOneWord ) {\n\t// First check for nouns with multiple stems, which are only diminutives.\n\tfor ( const paradigm of stemsThatBelongToOneWord.nouns ) {\n\t\tif ( paradigm.includes( stemmedWord ) ) {\n\t\t\treturn paradigm[ 0 ];\n\t\t}\n\t}\n\n\t// Second check for adjectives with multiple stems, which are only adjectives ending in -bl/-bil.\n\tfor ( const paradigm of stemsThatBelongToOneWord.adjectives ) {\n\t\tif ( paradigm.includes( stemmedWord ) ) {\n\t\t\treturn paradigm[ 0 ];\n\t\t}\n\t}\n\n\t// Last check for verbs that have irregular forms.\n\tfor ( const paradigm of stemsThatBelongToOneWord.verbs ) {\n\t\tif ( paradigm.includes( stemmedWord ) ) {\n\t\t\treturn paradigm[ 0 ];\n\t\t}\n\t}\n\treturn null;\n};\n\n/**\n * Stems verb suffixes.\n *\n * @param {string}  word                The original word.\n * @param {string}  wordAfter1          The word after step 1.\n * @param {string}  rvText              The text of the RV.\n * @param {number}  rv                  The start position of the RV.\n * @param {Object}  morphologyData      The Spanish morphology data.\n *\n * @returns {string} The word with the verb suffixes removed (if applicable).\n */\nconst stemVerbSuffixes = function( word, wordAfter1, rvText, rv ) {\n\t// Do step 2a if no ending was removed by step 1.\n\tconst suf = endsInArr( rvText, [ \"ya\", \"ye\", \"yan\", \"yen\", \"yeron\", \"yendo\", \"yo\", \"yó\", \"yas\", \"yes\", \"yais\", \"yamos\" ] );\n\n\tif ( suf !== \"\" && ( word.slice( -suf.length - 1, -suf.length ) === \"u\" ) ) {\n\t\tword = word.slice( 0, -suf.length );\n\t}\n\n\tif ( word !== wordAfter1 ) {\n\t\trvText = word.slice( rv );\n\t}\n\n\t// Do Step 2b if step 2a was done, but failed to remove a suffix.\n\tif ( word === wordAfter1 ) {\n\t\tconst suf11 = endsInArr( rvText, [ \"arían\", \"arías\", \"arán\", \"arás\", \"aríais\", \"aría\", \"aréis\",\n\t\t\t\"aríamos\", \"aremos\", \"ará\", \"aré\", \"erían\", \"erías\", \"erán\",\n\t\t\t\"erás\", \"eríais\", \"ería\", \"eréis\", \"eríamos\", \"eremos\", \"erá\",\n\t\t\t\"eré\", \"irían\", \"irías\", \"irán\", \"irás\", \"iríais\", \"iría\", \"iréis\",\n\t\t\t\"iríamos\", \"iremos\", \"irá\", \"iré\", \"aba\", \"ada\", \"ida\", \"ía\", \"ara\",\n\t\t\t\"iera\", \"ad\", \"ed\", \"id\", \"ase\", \"iese\", \"aste\", \"iste\", \"an\",\n\t\t\t\"aban\", \"ían\", \"aran\", \"ieran\", \"asen\", \"iesen\", \"aron\", \"ieron\",\n\t\t\t\"ado\", \"ido\", \"ando\", \"iendo\", \"ió\", \"ar\", \"er\", \"ir\", \"as\", \"abas\",\n\t\t\t\"adas\", \"idas\", \"ías\", \"aras\", \"ieras\", \"ases\", \"ieses\", \"ís\", \"áis\",\n\t\t\t\"abais\", \"íais\", \"arais\", \"ierais\", \"  aseis\", \"ieseis\", \"asteis\",\n\t\t\t\"isteis\", \"ados\", \"idos\", \"amos\", \"ábamos\", \"íamos\", \"imos\", \"áramos\",\n\t\t\t\"iéramos\", \"iésemos\", \"ásemos\" ] );\n\t\tconst suf12 = endsInArr( rvText, [ \"en\", \"es\", \"éis\", \"emos\" ] );\n\t\tif ( suf11 !== \"\" ) {\n\t\t\tword = word.slice( 0, -suf11.length );\n\t\t} else if ( suf12 !== \"\" ) {\n\t\t\tword = word.slice( 0, -suf12.length );\n\t\t\tif ( endsIn( word, \"gu\" ) ) {\n\t\t\t\tword = word.slice( 0, -1 );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn word;\n};\n\n/**\n * Stems Spanish words.\n *\n * @param {string} word            The word to stem.\n * @param {Object} morphologyData  The Spanish morphology data.\n *\n * @returns {string} The stemmed word.\n */\nexport default function stem( word, morphologyData ) {\n\tword.toLowerCase();\n\n\tconst ifException = checkWordInFullFormExceptions( word, morphologyData.exceptionStemsWithFullForms );\n\tif ( ifException ) {\n\t\treturn ifException;\n\t}\n\n\tconst nonPluralsOnS = morphologyData.wordsThatLookLikeButAreNot.nonPluralsOnS;\n\tif ( nonPluralsOnS.includes( word ) ) {\n\t\treturn removeAccent( word );\n\t}\n\n\tconst length = word.length;\n\tif ( length < 2 ) {\n\t\treturn removeAccent( word );\n\t}\n\n\tlet r1 = length;\n\tlet r2 = length;\n\tlet rv = length;\n\n\t/**\n\t * R1 is the region after the first non-vowel following a vowel, or is the null region at the end of the word if\n\t * there is no such non-vowel.\n\t */\n\tfor ( let i = 0; i < ( length - 1 ) && r1 === length; i++ ) {\n\t\tif ( isVowel( word[ i ] ) && ! isVowel( word[ i + 1 ] ) ) {\n\t\t\tr1 = i + 2;\n\t\t}\n\t}\n\n\t/**\n\t * R2 is the region after the first non-vowel following a vowel in R1, or is the null region at the end of the\n\t * word if there is no such non-vowel.\n\t */\n\tfor ( let i = r1; i < ( length - 1 ) && r2 === length; i++ ) {\n\t\tif ( isVowel( word[ i ] ) && ! isVowel( word[ i + 1 ] ) ) {\n\t\t\tr2 = i + 2;\n\t\t}\n\t}\n\n\tif ( length > 3 ) {\n\t\tif ( ! isVowel( word[ 1 ] ) ) {\n\t\t\trv = nextVowelPosition( word, 2 ) + 1;\n\t\t} else if ( isVowel( word[ 0 ] ) && isVowel( word[ 1 ] ) ) {\n\t\t\trv = nextConsonantPosition( word, 2 ) + 1;\n\t\t} else {\n\t\t\trv = 3;\n\t\t}\n\t}\n\n\tlet r1Text = word.slice( r1 );\n\tlet r2Text = word.slice( r2 );\n\tlet rvText = word.slice( rv );\n\tconst originalWord = word;\n\n\t// Step 0: Attached pronoun\n\tconst pronounSuffix = [ \"me\", \"se\", \"sela\", \"selo\", \"selas\", \"selos\", \"la\", \"le\", \"lo\", \"las\", \"les\", \"los\", \"nos\" ];\n\tconst pronounSuffixPre1 = [ \"iéndo\", \"ándo\", \"ár\", \"ér\", \"ír\" ];\n\tconst pronounSuffixPre2 = [ \"iendo\", \"ando\", \"ar\", \"er\", \"ir\" ];\n\n\tconst suffix = endsInArr( word, pronounSuffix );\n\n\tif ( suffix !== \"\" && ! morphologyData.wordsThatLookLikeButAreNot.notVerbsEndingInPersonalPronouns.includes( word ) ) {\n\t\tlet preSuffix = endsInArr( rvText.slice( 0, -suffix.length ), pronounSuffixPre1 );\n\n\t\tif ( preSuffix === \"\" ) {\n\t\t\tpreSuffix = endsInArr( rvText.slice( 0, -suffix.length ), pronounSuffixPre2 );\n\n\t\t\tif ( preSuffix !== \"\" || ( endsIn( word.slice( 0, -suffix.length ), \"uyendo\" ) ) ) {\n\t\t\t\tword = word.slice( 0, -suffix.length );\n\t\t\t}\n\t\t} else {\n\t\t\tword = removeAccent( word.slice( 0, -suffix.length ) );\n\t\t}\n\t}\n\n\tif ( word !== originalWord ) {\n\t\tr1Text = word.slice( r1 );\n\t\tr2Text = word.slice( r2 );\n\t\trvText = word.slice( rv );\n\t}\n\n\tconst wordAfter0 = word;\n\n\tconst suf1 = endsInArr( r2Text, [ \"anza\", \"anzas\", \"ico\", \"ica\", \"icos\", \"icas\", \"ismo\", \"ismos\",\n\t\t\"able\", \"ables\", \"ible\", \"ibles\", \"ista\", \"istas\", \"oso\", \"osa\",\n\t\t\"osos\", \"osas\", \"amiento\", \"amientos\", \"imiento\", \"imientos\" ] );\n\tconst suf2 = endsInArr( r2Text, [ \"icadora\", \"icador\", \"icación\", \"icadoras\", \"icadores\", \"icaciones\",\n\t\t\"icante\", \"icantes\", \"icancia\", \"icancias\", \"adora\", \"ador\", \"ación\",\n\t\t\"adoras\", \"adores\", \"aciones\", \"ante\", \"antes\", \"ancia\", \"ancias\" ] );\n\tconst suf3 = endsInArr( r2Text, [ \"logía\", \"logías\" ] );\n\tconst suf4 = endsInArr( r2Text, [ \"ución\", \"uciones\" ] );\n\tconst suf5 = endsInArr( r2Text, [ \"encia\", \"encias\" ] );\n\tconst suf9 = endsInArr( r2Text, [ \"abilidad\", \"abilidades\", \"icidad\", \"icidades\", \"ividad\", \"ividades\", \"idad\", \"idades\" ] );\n\tconst suf10 = endsInArr( r2Text, [ \"ativa\", \"ativo\", \"ativas\", \"ativos\", \"iva\", \"ivo\", \"ivas\", \"ivos\" ] );\n\n\tif ( suf1 !== \"\" ) {\n\t\tword = word.slice( 0, -suf1.length );\n\t} else if ( suf2 !== \"\" ) {\n\t\tword = word.slice( 0, -suf2.length );\n\t} else if ( suf3 !== \"\" ) {\n\t\tword = word.slice( 0, -suf3.length ) + \"log\";\n\t} else if ( suf4 !== \"\" ) {\n\t\tword = word.slice( 0, -suf4.length ) + \"u\";\n\t} else if ( suf5 !== \"\" ) {\n\t\tword = word.slice( 0, -suf5.length ) + \"ente\";\n\t} else if ( suf9 !== \"\" ) {\n\t\tword = word.slice( 0, -suf9.length );\n\t} else if ( suf10 !== \"\" ) {\n\t\tword = word.slice( 0, -suf10.length );\n\t}\n\n\t// Check if the word is an adverb in -mente. Stem it as a adverb if so, and immediately return the result.\n\tconst ifMente = tryStemAsMente( word, r1Text, morphologyData.menteStemming );\n\tif ( ifMente !== word ) {\n\t\treturn removeAccent( ifMente );\n\t}\n\n\t// Check if the word is a superlative. Stem it as a superlative if so, and immediately return the result.\n\tconst ifSuperlative = tryStemAsSuperlative( word, r1Text, morphologyData.superlativesStemming );\n\tif ( ifSuperlative !== word ) {\n\t\treturn removeAccent( ifSuperlative );\n\t}\n\n\t// Check if the word is a diminutive. Stem it as a diminutive if so, and immediately return the result.\n\tconst ifDiminutive = tryStemAsDiminutive( word, morphologyData.diminutivesStemming );\n\tif ( ifDiminutive !== word ) {\n\t\treturn removeAccent( ifDiminutive );\n\t}\n\n\tif ( word !== wordAfter0 ) {\n\t\trvText = word.slice( rv );\n\t}\n\n\tconst wordAfter1 = word;\n\n\n\t// Step 2a and 2b stem verb suffixes.\n\tconst notVerbForms = morphologyData.wordsThatLookLikeButAreNot.notVerbForms;\n\n\tif ( wordAfter0 === wordAfter1 ) {\n\t\t// If the word ends in -s, it is removed before checking the non-verbs list, as the list does not include plural forms.\n\t\tlet wordWithoutS = word;\n\t\tif ( word.endsWith( \"s\" ) ) {\n\t\t\twordWithoutS = word.slice( 0, -1 );\n\t\t}\n\n\t\tif ( notVerbForms.includes( wordWithoutS ) ) {\n\t\t\t/*\n\t\t\t * If the word without -s is matched on the non-verbs list, we can perform the next (non-verb) stemming steps\n\t\t\t * with the -s removed. This is because all possible non-verb suffixes ending in -s also have an equivalent\n\t\t\t * without the -s (e.g. -as/a; -es/e), so will be stemmed after stripping the -s.\n\t\t\t */\n\t\t\tword = wordWithoutS;\n\t\t} else {\n\t\t\tword = stemVerbSuffixes( word, wordAfter1, rvText, rv, morphologyData );\n\t\t}\n\t}\n\n\trvText = word.slice( rv );\n\n\tconst suf13 = endsInArr( rvText, [ \"os\", \"a\", \"o\", \"á\", \"í\", \"ó\" ] );\n\tif ( suf13 !== \"\" ) {\n\t\tword = word.slice( 0, -suf13.length );\n\t} else if ( ( endsInArr( rvText, [ \"e\", \"é\" ] ) ) !== \"\" ) {\n\t\tword = word.slice( 0, -1 );\n\t\trvText = word.slice( rv );\n\t\tif ( endsIn( rvText, \"u\" ) && endsIn( word, \"gu\" ) ) {\n\t\t\tword = word.slice( 0, -1 );\n\t\t}\n\t}\n\n\tconst canonicalStem = canonicalizeStem( word, morphologyData.stemsThatBelongToOneWord );\n\tif ( canonicalStem ) {\n\t\treturn canonicalStem;\n\t}\n\n\treturn removeAccent( word );\n}\n"]}